name: Build MindTheGapps

on:
  workflow_dispatch:
    inputs:
      release:
        description: "Upload to release"
        required: true
        default: false
        type: boolean

jobs:
  matrix:
    name: Generate build matrix
    runs-on: ubuntu-20.04
    outputs:
      matrix: ${{ steps.setup.outputs.matrix }}
    steps:

      - name: Generate build matrix
        id: setup
        uses: actions/github-script@v6
        with:
          script: |
            let matrix = {};
            matrix.androidv = [9, 10, 11, "12.1", 13]
            matrix.arch = ["arm", "arm64", "x86", "x86_64"]
            core.setOutput("matrix", JSON.stringify(matrix));

  build:
    name: Build ${{ matrix.androidv }}-${{ matrix.arch }}
    runs-on: ubuntu-20.04
    needs: matrix
    strategy:
      matrix: ${{ fromJson(needs.matrix.outputs.matrix) }}
    steps:

      - name: Map Android Version to tree
        run: |
          declare -A ANDROID_VER_MAP=([9]="pi" [10]="qoppa" [11]="rho" ["12.1"]="sigma" [13]="tau")
          echo "ANDROIDV=${ANDROID_VER_MAP[${{ matrix.androidv }}]}" >> $GITHUB_ENV
          declare -A ANDROID_API_MAP=([9]=28 [10]=29 [11]=30 ["12.1"]=32 [13]=33)
          echo "ANDROID_API=${ANDROID_API_MAP[${{ matrix.androidv }}]}" >> $GITHUB_ENV

      - name: Clone repository
        run: git clone -b ${{ env.ANDROIDV }} --filter=tree:0 https://gitlab.com/MindTheGapps/vendor_gapps.git

      - name: Build
        working-directory: vendor_gapps
        continue-on-error: true
        run: |
          if [ -d overlay ]; then
            sudo apt-get install -y aapt zipalign
            mkdir -p common/proprietary/product/overlay
            sed -i -e '/overlay/d' build/gapps.sh
            sed -i -e '/RROs/d' build/gapps.sh
            echo "Compiling RROs"
            find overlay -maxdepth 1 -mindepth 1 -type d -print0 | while IFS= read -r -d '' dir
            do
                echo "Building ${dir/overlay\//}"
                aapt package -M "$dir"/AndroidManifest.xml -S "$dir"/res/ -I /usr/local/lib/android/sdk/platforms/android-${{ env.ANDROID_API }}/android.jar -F "${dir/overlay\//}".apk.u
                zipalign -v 4 "${dir/overlay\//}".apk.u "${dir/overlay\//}".apk.s
                java -jar build/sign/signapk.jar build/sign/testkey.x509.pem build/sign/testkey.pk8 "${dir/overlay\//}".apk.s "${dir/overlay\//}".apk
            done
            mv -v *.apk common/proprietary/product/overlay
          fi
          sed -i -e 's/_%H%M%S//g' build/gapps.sh
          echo "date=$(date -u +%Y%m%d)" >> $GITHUB_ENV
          make gapps_"${{ matrix.arch }}"
          sed -i -e 's/\ .*//' out/*.md5sum

      - name: Upload
        if: github.event.inputs.release != 'true'
        uses: actions/upload-artifact@v3
        with:
          name: Built_MindTheGapps-${{ matrix.androidv }}-${{ matrix.arch }}-${{ env.date }}
          path: vendor_gapps/out/*
          if-no-files-found: ignore

      - name: Release
        uses: softprops/action-gh-release@v1
        if: github.event.inputs.release == 'true'
        with:
          tag_name: ${{ env.date }}
          draft: true
          prerelease: false
          files: |
            vendor_gapps/out/*

      - name: Setup SSH
        uses: shimataro/ssh-key-action@v2
        if: github.event.inputs.release == 'true'
        with:
          key: ${{ secrets.SSH_KEY }}
          known_hosts: ${{ vars.SF_HOSTS }}

      - name: Upload to SourceForge
        if: github.event.inputs.release == 'true'
        working-directory: vendor_gapps/out
        run: |
          mkdir ${{ matrix.arch }}
          mkdir ${{ matrix.arch }}/${{ env.date }}
          mv *.* ${{ matrix.arch }}/${{ env.date }}
          rsync -avP -e ssh ${{ matrix.arch }} ${{ vars.SF_USER }}@frs.sourceforge.net:/home/frs/project/wsa-mtg/
